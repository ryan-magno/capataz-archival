{
	"name": "Archive Tables Pipeline",
	"properties": {
		"activities": [
			{
				"name": "Get Metadata",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 3,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "SELECT TableName FROM dbo.MetadataTable WHERE IsActive = 1",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "CapatazMetadata",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Iterate the Tables",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Metadata').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"batchCount": 6,
					"activities": [
						{
							"name": "SQL Database to ADLS",
							"type": "Copy",
							"state": "Inactive",
							"onInactiveMarkAs": "Succeeded",
							"dependsOn": [
								{
									"activity": "Live to Archive",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 3,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "ArchivedDBDataset",
									"type": "DatasetReference",
									"parameters": {
										"TableName": {
											"value": "@item().TableName",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "SinkDatasetParquet",
									"type": "DatasetReference",
									"parameters": {
										"FileName": {
											"value": "@concat(\n    variables('Year'), '-', \n    variables('Month'), \n    if(equals(variables('Day'), ''), '', concat('-', variables('Day'))),\n    ' - ', pipeline().RunId, '.parquet'\n)\n",
											"type": "Expression"
										},
										"Directory": {
											"value": "@concat(replace(item().TableName, '.Archived', ''), '/', variables('Year'), '/', variables('Month'), '/')",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Update Monitoring Table",
							"type": "SqlServerStoredProcedure",
							"state": "Inactive",
							"onInactiveMarkAs": "Succeeded",
							"dependsOn": [
								{
									"activity": "SQL Database to ADLS",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 3,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[UpdateMonitoring]",
								"storedProcedureParameters": {
									"Remarks": {
										"value": {
											"value": "@activity('SQL Database to ADLS').error",
											"type": "Expression"
										},
										"type": "String"
									},
									"Write": {
										"value": {
											"value": "@activity('SQL Database to ADLS').output.rowsCopied",
											"type": "Expression"
										},
										"type": "Int16"
									},
									"Read": {
										"value": {
											"value": "@activity('SQL Database to ADLS').output.rowsRead",
											"type": "Expression"
										},
										"type": "Int16"
									},
									"TableName": {
										"value": {
											"value": "@item().TableName",
											"type": "Expression"
										},
										"type": "String"
									},
									"PipelineRunID": {
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										},
										"type": "String"
									},
									"Year": {
										"value": {
											"value": "@variables('Year')",
											"type": "Expression"
										},
										"type": "Int16"
									},
									"Month": {
										"value": {
											"value": "@variables('Month')",
											"type": "Expression"
										},
										"type": "Int16"
									},
									"Day": {
										"value": {
											"value": "@variables('Day')",
											"type": "Expression"
										},
										"type": "Int16"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "CapatazDBLinkedService",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Log Copy Errors",
							"type": "SqlServerStoredProcedure",
							"state": "Inactive",
							"onInactiveMarkAs": "Succeeded",
							"dependsOn": [
								{
									"activity": "SQL Database to ADLS",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 3,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[LogError]",
								"storedProcedureParameters": {
									"Remarks": {
										"value": {
											"value": "@concat('Errors: ', string(activity('SQL Database to ADLS').output.errors))\n",
											"type": "Expression"
										},
										"type": "String"
									},
									"TableName": {
										"value": {
											"value": "@item().TableName",
											"type": "Expression"
										},
										"type": "String"
									},
									"PipelineRunID": {
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "CapatazDBLinkedService",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Live to Archive",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "@if(\n    or(\n        equals(item().TableName, 'ProfileTimeKeepingWhosWorkings'),\n        equals(item().TableName, 'ProfileTimeKeepingWhosWorkings.Archived')\n    ),\n    concat(\n        'SELECT * FROM [', item().TableName, '] WITH (NOLOCK) WHERE YEAR([DateTimeInOut]) = ', variables('Year')\n    ),\n    concat(\n        'SELECT * FROM [', item().TableName, '] WITH (NOLOCK) WHERE YEAR([CreatedDate]) = ', variables('Year')\n    )\n)\n",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "AzureSqlSink",
									"sqlWriterStoredProcedureName": "[dbo].[MoveArchivedData]",
									"sqlWriterTableType": "dbo.ArchivedTableType",
									"storedProcedureTableTypeParameterName": "ArchivedTableName",
									"storedProcedureParameters": {
										"ArchivedTableName": {
											"type": "String",
											"value": {
												"value": "@item().TableName",
												"type": "Expression"
											}
										}
									},
									"disableMetricsCollection": false
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "CapatazDB",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "ArchivedDBDataset",
									"type": "DatasetReference",
									"parameters": {
										"TableName": {
											"value": "@item().TableName",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			}
		],
		"variables": {
			"Year": {
				"type": "String",
				"defaultValue": "2022"
			}
		},
		"annotations": []
	}
}